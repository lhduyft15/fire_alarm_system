// Generated by Dagger (https://google.github.io/dagger).
package com.siliconlabs.bluetoothmesh.App.Fragments.ControlGroup;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ControlGroupModule_ProvideControlGroupViewFactory
    implements Factory<ControlGroupView> {
  private final ControlGroupModule module;

  private final Provider<ControlGroupFragment> controlGroupFragmentProvider;

  public ControlGroupModule_ProvideControlGroupViewFactory(
      ControlGroupModule module, Provider<ControlGroupFragment> controlGroupFragmentProvider) {
    this.module = module;
    this.controlGroupFragmentProvider = controlGroupFragmentProvider;
  }

  @Override
  public ControlGroupView get() {
    return provideInstance(module, controlGroupFragmentProvider);
  }

  public static ControlGroupView provideInstance(
      ControlGroupModule module, Provider<ControlGroupFragment> controlGroupFragmentProvider) {
    return proxyProvideControlGroupView(module, controlGroupFragmentProvider.get());
  }

  public static ControlGroupModule_ProvideControlGroupViewFactory create(
      ControlGroupModule module, Provider<ControlGroupFragment> controlGroupFragmentProvider) {
    return new ControlGroupModule_ProvideControlGroupViewFactory(
        module, controlGroupFragmentProvider);
  }

  public static ControlGroupView proxyProvideControlGroupView(
      ControlGroupModule instance, ControlGroupFragment controlGroupFragment) {
    return Preconditions.checkNotNull(
        instance.provideControlGroupView(controlGroupFragment),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
