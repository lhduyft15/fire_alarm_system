// Generated by Dagger (https://google.github.io/dagger).
package com.siliconlabs.bluetoothmesh.App.Activities.Main;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class MainActivityModule_ProvideMainActivityViewFactory
    implements Factory<MainActivityView> {
  private final MainActivityModule module;

  private final Provider<MainActivity> mainActivityProvider;

  public MainActivityModule_ProvideMainActivityViewFactory(
      MainActivityModule module, Provider<MainActivity> mainActivityProvider) {
    this.module = module;
    this.mainActivityProvider = mainActivityProvider;
  }

  @Override
  public MainActivityView get() {
    return provideInstance(module, mainActivityProvider);
  }

  public static MainActivityView provideInstance(
      MainActivityModule module, Provider<MainActivity> mainActivityProvider) {
    return proxyProvideMainActivityView(module, mainActivityProvider.get());
  }

  public static MainActivityModule_ProvideMainActivityViewFactory create(
      MainActivityModule module, Provider<MainActivity> mainActivityProvider) {
    return new MainActivityModule_ProvideMainActivityViewFactory(module, mainActivityProvider);
  }

  public static MainActivityView proxyProvideMainActivityView(
      MainActivityModule instance, MainActivity mainActivity) {
    return Preconditions.checkNotNull(
        instance.provideMainActivityView(mainActivity),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
