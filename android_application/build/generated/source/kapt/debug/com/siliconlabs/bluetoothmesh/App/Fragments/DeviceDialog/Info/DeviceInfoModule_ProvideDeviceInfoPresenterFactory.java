// Generated by Dagger (https://google.github.io/dagger).
package com.siliconlabs.bluetoothmesh.App.Fragments.DeviceDialog.Info;

import com.siliconlabs.bluetoothmesh.App.Logic.MeshLogic;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DeviceInfoModule_ProvideDeviceInfoPresenterFactory
    implements Factory<DeviceInfoPresenter> {
  private final DeviceInfoModule module;

  private final Provider<DeviceInfoView> deviceInfoViewProvider;

  private final Provider<MeshLogic> meshLogicProvider;

  public DeviceInfoModule_ProvideDeviceInfoPresenterFactory(
      DeviceInfoModule module,
      Provider<DeviceInfoView> deviceInfoViewProvider,
      Provider<MeshLogic> meshLogicProvider) {
    this.module = module;
    this.deviceInfoViewProvider = deviceInfoViewProvider;
    this.meshLogicProvider = meshLogicProvider;
  }

  @Override
  public DeviceInfoPresenter get() {
    return provideInstance(module, deviceInfoViewProvider, meshLogicProvider);
  }

  public static DeviceInfoPresenter provideInstance(
      DeviceInfoModule module,
      Provider<DeviceInfoView> deviceInfoViewProvider,
      Provider<MeshLogic> meshLogicProvider) {
    return proxyProvideDeviceInfoPresenter(
        module, deviceInfoViewProvider.get(), meshLogicProvider.get());
  }

  public static DeviceInfoModule_ProvideDeviceInfoPresenterFactory create(
      DeviceInfoModule module,
      Provider<DeviceInfoView> deviceInfoViewProvider,
      Provider<MeshLogic> meshLogicProvider) {
    return new DeviceInfoModule_ProvideDeviceInfoPresenterFactory(
        module, deviceInfoViewProvider, meshLogicProvider);
  }

  public static DeviceInfoPresenter proxyProvideDeviceInfoPresenter(
      DeviceInfoModule instance, DeviceInfoView deviceInfoView, MeshLogic meshLogic) {
    return Preconditions.checkNotNull(
        instance.provideDeviceInfoPresenter(deviceInfoView, meshLogic),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
