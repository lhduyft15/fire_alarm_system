// Generated by Dagger (https://google.github.io/dagger).
package com.siliconlabs.bluetoothmesh.App.Fragments.Scanner;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class ScannerModule_ProvideScannerViewFactory implements Factory<ScannerView> {
  private final ScannerModule module;

  private final Provider<ScannerFragment> scannerFragmentProvider;

  public ScannerModule_ProvideScannerViewFactory(
      ScannerModule module, Provider<ScannerFragment> scannerFragmentProvider) {
    this.module = module;
    this.scannerFragmentProvider = scannerFragmentProvider;
  }

  @Override
  public ScannerView get() {
    return provideInstance(module, scannerFragmentProvider);
  }

  public static ScannerView provideInstance(
      ScannerModule module, Provider<ScannerFragment> scannerFragmentProvider) {
    return proxyProvideScannerView(module, scannerFragmentProvider.get());
  }

  public static ScannerModule_ProvideScannerViewFactory create(
      ScannerModule module, Provider<ScannerFragment> scannerFragmentProvider) {
    return new ScannerModule_ProvideScannerViewFactory(module, scannerFragmentProvider);
  }

  public static ScannerView proxyProvideScannerView(
      ScannerModule instance, ScannerFragment scannerFragment) {
    return Preconditions.checkNotNull(
        instance.provideScannerView(scannerFragment),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
