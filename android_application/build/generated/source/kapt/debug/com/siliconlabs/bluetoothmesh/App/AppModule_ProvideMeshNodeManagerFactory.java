// Generated by Dagger (https://google.github.io/dagger).
package com.siliconlabs.bluetoothmesh.App;

import com.siliconlabs.bluetoothmesh.App.Database.DeviceFunctionalityDb;
import com.siliconlabs.bluetoothmesh.App.Models.MeshNodeManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideMeshNodeManagerFactory implements Factory<MeshNodeManager> {
  private final AppModule module;

  private final Provider<DeviceFunctionalityDb> deviceFunctionalityDbProvider;

  public AppModule_ProvideMeshNodeManagerFactory(
      AppModule module, Provider<DeviceFunctionalityDb> deviceFunctionalityDbProvider) {
    this.module = module;
    this.deviceFunctionalityDbProvider = deviceFunctionalityDbProvider;
  }

  @Override
  public MeshNodeManager get() {
    return provideInstance(module, deviceFunctionalityDbProvider);
  }

  public static MeshNodeManager provideInstance(
      AppModule module, Provider<DeviceFunctionalityDb> deviceFunctionalityDbProvider) {
    return proxyProvideMeshNodeManager(module, deviceFunctionalityDbProvider.get());
  }

  public static AppModule_ProvideMeshNodeManagerFactory create(
      AppModule module, Provider<DeviceFunctionalityDb> deviceFunctionalityDbProvider) {
    return new AppModule_ProvideMeshNodeManagerFactory(module, deviceFunctionalityDbProvider);
  }

  public static MeshNodeManager proxyProvideMeshNodeManager(
      AppModule instance, DeviceFunctionalityDb deviceFunctionalityDb) {
    return Preconditions.checkNotNull(
        instance.provideMeshNodeManager(deviceFunctionalityDb),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
