// Generated by Dagger (https://google.github.io/dagger).
package com.siliconlabs.bluetoothmesh.App.Fragments.GroupList;

import com.siliconlabs.bluetoothmesh.App.Logic.MeshLogic;
import com.siliconlabs.bluetoothmesh.App.Models.MeshNetworkManager;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class GroupListModule_ProvideGroupListPresenterFactory
    implements Factory<GroupListPresenter> {
  private final GroupListModule module;

  private final Provider<GroupListView> groupListViewProvider;

  private final Provider<MeshLogic> meshLogicProvider;

  private final Provider<MeshNetworkManager> meshNetworkManagerProvider;

  public GroupListModule_ProvideGroupListPresenterFactory(
      GroupListModule module,
      Provider<GroupListView> groupListViewProvider,
      Provider<MeshLogic> meshLogicProvider,
      Provider<MeshNetworkManager> meshNetworkManagerProvider) {
    this.module = module;
    this.groupListViewProvider = groupListViewProvider;
    this.meshLogicProvider = meshLogicProvider;
    this.meshNetworkManagerProvider = meshNetworkManagerProvider;
  }

  @Override
  public GroupListPresenter get() {
    return provideInstance(
        module, groupListViewProvider, meshLogicProvider, meshNetworkManagerProvider);
  }

  public static GroupListPresenter provideInstance(
      GroupListModule module,
      Provider<GroupListView> groupListViewProvider,
      Provider<MeshLogic> meshLogicProvider,
      Provider<MeshNetworkManager> meshNetworkManagerProvider) {
    return proxyProvideGroupListPresenter(
        module,
        groupListViewProvider.get(),
        meshLogicProvider.get(),
        meshNetworkManagerProvider.get());
  }

  public static GroupListModule_ProvideGroupListPresenterFactory create(
      GroupListModule module,
      Provider<GroupListView> groupListViewProvider,
      Provider<MeshLogic> meshLogicProvider,
      Provider<MeshNetworkManager> meshNetworkManagerProvider) {
    return new GroupListModule_ProvideGroupListPresenterFactory(
        module, groupListViewProvider, meshLogicProvider, meshNetworkManagerProvider);
  }

  public static GroupListPresenter proxyProvideGroupListPresenter(
      GroupListModule instance,
      GroupListView groupListView,
      MeshLogic meshLogic,
      MeshNetworkManager meshNetworkManager) {
    return Preconditions.checkNotNull(
        instance.provideGroupListPresenter(groupListView, meshLogic, meshNetworkManager),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
