// Generated by Dagger (https://google.github.io/dagger).
package com.siliconlabs.bluetoothmesh.App.Fragments.MainFragment;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class MainFragmentModule_ProvideMainFragmentViewFactory
    implements Factory<MainFragmentView> {
  private final MainFragmentModule module;

  private final Provider<MainFragment> mainFragmentProvider;

  public MainFragmentModule_ProvideMainFragmentViewFactory(
      MainFragmentModule module, Provider<MainFragment> mainFragmentProvider) {
    this.module = module;
    this.mainFragmentProvider = mainFragmentProvider;
  }

  @Override
  public MainFragmentView get() {
    return provideInstance(module, mainFragmentProvider);
  }

  public static MainFragmentView provideInstance(
      MainFragmentModule module, Provider<MainFragment> mainFragmentProvider) {
    return proxyProvideMainFragmentView(module, mainFragmentProvider.get());
  }

  public static MainFragmentModule_ProvideMainFragmentViewFactory create(
      MainFragmentModule module, Provider<MainFragment> mainFragmentProvider) {
    return new MainFragmentModule_ProvideMainFragmentViewFactory(module, mainFragmentProvider);
  }

  public static MainFragmentView proxyProvideMainFragmentView(
      MainFragmentModule instance, MainFragment mainFragment) {
    return Preconditions.checkNotNull(
        instance.provideMainFragmentView(mainFragment),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
